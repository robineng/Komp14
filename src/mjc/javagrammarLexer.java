// Generated from javagrammar.g4 by ANTLR 4.2

    package mjc;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class javagrammarLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS=1, COMMENT1=2, COMMENT2=3, COMMENT3=4, CLASS=5, PUBLIC=6, STATIC=7, 
		VOID=8, IF=9, ELSE=10, WHILE=11, NEW=12, RETURN=13, THIS=14, SYSO=15, 
		LENGTH=16, BOOLEAN=17, INT=18, STRING=19, LONG=20, LEFTBRACKET=21, RIGHTBRACKET=22, 
		LEFTPAREN=23, RIGHTPAREN=24, LEFTBRACE=25, RIGHTBRACE=26, DOT=27, COMMA=28, 
		COLON=29, SEMICOLON=30, PLUS=31, MINUS=32, MULT=33, ASSIGNMENT=34, NOT=35, 
		AND=36, OR=37, LESSTHAN=38, MORETHAN=39, LEQ=40, MEQ=41, EQ=42, NEQ=43, 
		TRUE=44, FALSE=45, INT_LIT=46, LONG_LIT=47, ID=48;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"WS", "COMMENT1", "COMMENT2", "COMMENT3", "'class'", "'public'", "'static'", 
		"'void'", "'if'", "'else'", "'while'", "'new'", "'return'", "'this'", 
		"'System.out.println'", "'length'", "'boolean'", "'int'", "'String'", 
		"'long'", "'['", "']'", "'('", "')'", "'{'", "'}'", "'.'", "','", "':'", 
		"';'", "'+'", "'-'", "'*'", "'='", "'!'", "'&&'", "'||'", "'<'", "'>'", 
		"'<='", "'>='", "'=='", "'!='", "'true'", "'false'", "INT_LIT", "LONG_LIT", 
		"ID"
	};
	public static final String[] ruleNames = {
		"WS", "COMMENT1", "COMMENT2", "COMMENT3", "CLASS", "PUBLIC", "STATIC", 
		"VOID", "IF", "ELSE", "WHILE", "NEW", "RETURN", "THIS", "SYSO", "LENGTH", 
		"BOOLEAN", "INT", "STRING", "LONG", "LEFTBRACKET", "RIGHTBRACKET", "LEFTPAREN", 
		"RIGHTPAREN", "LEFTBRACE", "RIGHTBRACE", "DOT", "COMMA", "COLON", "SEMICOLON", 
		"PLUS", "MINUS", "MULT", "ASSIGNMENT", "NOT", "AND", "OR", "LESSTHAN", 
		"MORETHAN", "LEQ", "MEQ", "EQ", "NEQ", "TRUE", "FALSE", "INT_LIT", "LONG_LIT", 
		"ID"
	};


	public javagrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "javagrammar.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\62\u015a\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\3\2\6\2e\n\2\r\2\16\2f\3"+
		"\2\3\2\3\3\3\3\3\3\3\3\7\3o\n\3\f\3\16\3r\13\3\3\3\3\3\3\3\3\3\3\4\3\4"+
		"\3\4\3\4\7\4|\n\4\f\4\16\4\177\13\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3"+
		"\5\3\5\7\5\u008b\n\5\f\5\16\5\u008e\13\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3"+
		"\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b"+
		"\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f"+
		"\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3"+
		"\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3"+
		"\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3"+
		"\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3"+
		"\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3"+
		"\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3"+
		"\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3%\3&\3"+
		"&\3&\3\'\3\'\3(\3(\3)\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\3,\3-\3-\3-\3-\3-"+
		"\3.\3.\3.\3.\3.\3.\3/\3/\3/\7/\u0141\n/\f/\16/\u0144\13/\5/\u0146\n/\3"+
		"\60\3\60\3\60\3\60\7\60\u014c\n\60\f\60\16\60\u014f\13\60\3\60\5\60\u0152"+
		"\n\60\3\61\3\61\7\61\u0156\n\61\f\61\16\61\u0159\13\61\5p}\u008c\2\62"+
		"\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20"+
		"\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37"+
		"= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62\3\2\7\5\2\13\f\17\17\""+
		"\"\3\2\f\f\4\2NNnn\5\2C\\aac|\6\2\62;C\\aac|\u0162\2\3\3\2\2\2\2\5\3\2"+
		"\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3"+
		"\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3"+
		"\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3"+
		"\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2"+
		"\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2"+
		"Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\3d\3\2\2\2\5j\3"+
		"\2\2\2\7w\3\2\2\2\t\u0085\3\2\2\2\13\u0095\3\2\2\2\r\u009b\3\2\2\2\17"+
		"\u00a2\3\2\2\2\21\u00a9\3\2\2\2\23\u00ae\3\2\2\2\25\u00b1\3\2\2\2\27\u00b6"+
		"\3\2\2\2\31\u00bc\3\2\2\2\33\u00c0\3\2\2\2\35\u00c7\3\2\2\2\37\u00cc\3"+
		"\2\2\2!\u00df\3\2\2\2#\u00e6\3\2\2\2%\u00ee\3\2\2\2\'\u00f2\3\2\2\2)\u00f9"+
		"\3\2\2\2+\u00fe\3\2\2\2-\u0100\3\2\2\2/\u0102\3\2\2\2\61\u0104\3\2\2\2"+
		"\63\u0106\3\2\2\2\65\u0108\3\2\2\2\67\u010a\3\2\2\29\u010c\3\2\2\2;\u010e"+
		"\3\2\2\2=\u0110\3\2\2\2?\u0112\3\2\2\2A\u0114\3\2\2\2C\u0116\3\2\2\2E"+
		"\u0118\3\2\2\2G\u011a\3\2\2\2I\u011c\3\2\2\2K\u011f\3\2\2\2M\u0122\3\2"+
		"\2\2O\u0124\3\2\2\2Q\u0126\3\2\2\2S\u0129\3\2\2\2U\u012c\3\2\2\2W\u012f"+
		"\3\2\2\2Y\u0132\3\2\2\2[\u0137\3\2\2\2]\u0145\3\2\2\2_\u0151\3\2\2\2a"+
		"\u0153\3\2\2\2ce\t\2\2\2dc\3\2\2\2ef\3\2\2\2fd\3\2\2\2fg\3\2\2\2gh\3\2"+
		"\2\2hi\b\2\2\2i\4\3\2\2\2jk\7\61\2\2kl\7\61\2\2lp\3\2\2\2mo\13\2\2\2n"+
		"m\3\2\2\2or\3\2\2\2pq\3\2\2\2pn\3\2\2\2qs\3\2\2\2rp\3\2\2\2st\t\3\2\2"+
		"tu\3\2\2\2uv\b\3\2\2v\6\3\2\2\2wx\7\61\2\2xy\7,\2\2y}\3\2\2\2z|\13\2\2"+
		"\2{z\3\2\2\2|\177\3\2\2\2}~\3\2\2\2}{\3\2\2\2~\u0080\3\2\2\2\177}\3\2"+
		"\2\2\u0080\u0081\7,\2\2\u0081\u0082\7\61\2\2\u0082\u0083\3\2\2\2\u0083"+
		"\u0084\b\4\2\2\u0084\b\3\2\2\2\u0085\u0086\7\61\2\2\u0086\u0087\7,\2\2"+
		"\u0087\u0088\7,\2\2\u0088\u008c\3\2\2\2\u0089\u008b\13\2\2\2\u008a\u0089"+
		"\3\2\2\2\u008b\u008e\3\2\2\2\u008c\u008d\3\2\2\2\u008c\u008a\3\2\2\2\u008d"+
		"\u008f\3\2\2\2\u008e\u008c\3\2\2\2\u008f\u0090\7,\2\2\u0090\u0091\7,\2"+
		"\2\u0091\u0092\7\61\2\2\u0092\u0093\3\2\2\2\u0093\u0094\b\5\2\2\u0094"+
		"\n\3\2\2\2\u0095\u0096\7e\2\2\u0096\u0097\7n\2\2\u0097\u0098\7c\2\2\u0098"+
		"\u0099\7u\2\2\u0099\u009a\7u\2\2\u009a\f\3\2\2\2\u009b\u009c\7r\2\2\u009c"+
		"\u009d\7w\2\2\u009d\u009e\7d\2\2\u009e\u009f\7n\2\2\u009f\u00a0\7k\2\2"+
		"\u00a0\u00a1\7e\2\2\u00a1\16\3\2\2\2\u00a2\u00a3\7u\2\2\u00a3\u00a4\7"+
		"v\2\2\u00a4\u00a5\7c\2\2\u00a5\u00a6\7v\2\2\u00a6\u00a7\7k\2\2\u00a7\u00a8"+
		"\7e\2\2\u00a8\20\3\2\2\2\u00a9\u00aa\7x\2\2\u00aa\u00ab\7q\2\2\u00ab\u00ac"+
		"\7k\2\2\u00ac\u00ad\7f\2\2\u00ad\22\3\2\2\2\u00ae\u00af\7k\2\2\u00af\u00b0"+
		"\7h\2\2\u00b0\24\3\2\2\2\u00b1\u00b2\7g\2\2\u00b2\u00b3\7n\2\2\u00b3\u00b4"+
		"\7u\2\2\u00b4\u00b5\7g\2\2\u00b5\26\3\2\2\2\u00b6\u00b7\7y\2\2\u00b7\u00b8"+
		"\7j\2\2\u00b8\u00b9\7k\2\2\u00b9\u00ba\7n\2\2\u00ba\u00bb\7g\2\2\u00bb"+
		"\30\3\2\2\2\u00bc\u00bd\7p\2\2\u00bd\u00be\7g\2\2\u00be\u00bf\7y\2\2\u00bf"+
		"\32\3\2\2\2\u00c0\u00c1\7t\2\2\u00c1\u00c2\7g\2\2\u00c2\u00c3\7v\2\2\u00c3"+
		"\u00c4\7w\2\2\u00c4\u00c5\7t\2\2\u00c5\u00c6\7p\2\2\u00c6\34\3\2\2\2\u00c7"+
		"\u00c8\7v\2\2\u00c8\u00c9\7j\2\2\u00c9\u00ca\7k\2\2\u00ca\u00cb\7u\2\2"+
		"\u00cb\36\3\2\2\2\u00cc\u00cd\7U\2\2\u00cd\u00ce\7{\2\2\u00ce\u00cf\7"+
		"u\2\2\u00cf\u00d0\7v\2\2\u00d0\u00d1\7g\2\2\u00d1\u00d2\7o\2\2\u00d2\u00d3"+
		"\7\60\2\2\u00d3\u00d4\7q\2\2\u00d4\u00d5\7w\2\2\u00d5\u00d6\7v\2\2\u00d6"+
		"\u00d7\7\60\2\2\u00d7\u00d8\7r\2\2\u00d8\u00d9\7t\2\2\u00d9\u00da\7k\2"+
		"\2\u00da\u00db\7p\2\2\u00db\u00dc\7v\2\2\u00dc\u00dd\7n\2\2\u00dd\u00de"+
		"\7p\2\2\u00de \3\2\2\2\u00df\u00e0\7n\2\2\u00e0\u00e1\7g\2\2\u00e1\u00e2"+
		"\7p\2\2\u00e2\u00e3\7i\2\2\u00e3\u00e4\7v\2\2\u00e4\u00e5\7j\2\2\u00e5"+
		"\"\3\2\2\2\u00e6\u00e7\7d\2\2\u00e7\u00e8\7q\2\2\u00e8\u00e9\7q\2\2\u00e9"+
		"\u00ea\7n\2\2\u00ea\u00eb\7g\2\2\u00eb\u00ec\7c\2\2\u00ec\u00ed\7p\2\2"+
		"\u00ed$\3\2\2\2\u00ee\u00ef\7k\2\2\u00ef\u00f0\7p\2\2\u00f0\u00f1\7v\2"+
		"\2\u00f1&\3\2\2\2\u00f2\u00f3\7U\2\2\u00f3\u00f4\7v\2\2\u00f4\u00f5\7"+
		"t\2\2\u00f5\u00f6\7k\2\2\u00f6\u00f7\7p\2\2\u00f7\u00f8\7i\2\2\u00f8("+
		"\3\2\2\2\u00f9\u00fa\7n\2\2\u00fa\u00fb\7q\2\2\u00fb\u00fc\7p\2\2\u00fc"+
		"\u00fd\7i\2\2\u00fd*\3\2\2\2\u00fe\u00ff\7]\2\2\u00ff,\3\2\2\2\u0100\u0101"+
		"\7_\2\2\u0101.\3\2\2\2\u0102\u0103\7*\2\2\u0103\60\3\2\2\2\u0104\u0105"+
		"\7+\2\2\u0105\62\3\2\2\2\u0106\u0107\7}\2\2\u0107\64\3\2\2\2\u0108\u0109"+
		"\7\177\2\2\u0109\66\3\2\2\2\u010a\u010b\7\60\2\2\u010b8\3\2\2\2\u010c"+
		"\u010d\7.\2\2\u010d:\3\2\2\2\u010e\u010f\7<\2\2\u010f<\3\2\2\2\u0110\u0111"+
		"\7=\2\2\u0111>\3\2\2\2\u0112\u0113\7-\2\2\u0113@\3\2\2\2\u0114\u0115\7"+
		"/\2\2\u0115B\3\2\2\2\u0116\u0117\7,\2\2\u0117D\3\2\2\2\u0118\u0119\7?"+
		"\2\2\u0119F\3\2\2\2\u011a\u011b\7#\2\2\u011bH\3\2\2\2\u011c\u011d\7(\2"+
		"\2\u011d\u011e\7(\2\2\u011eJ\3\2\2\2\u011f\u0120\7~\2\2\u0120\u0121\7"+
		"~\2\2\u0121L\3\2\2\2\u0122\u0123\7>\2\2\u0123N\3\2\2\2\u0124\u0125\7@"+
		"\2\2\u0125P\3\2\2\2\u0126\u0127\7>\2\2\u0127\u0128\7?\2\2\u0128R\3\2\2"+
		"\2\u0129\u012a\7@\2\2\u012a\u012b\7?\2\2\u012bT\3\2\2\2\u012c\u012d\7"+
		"?\2\2\u012d\u012e\7?\2\2\u012eV\3\2\2\2\u012f\u0130\7#\2\2\u0130\u0131"+
		"\7?\2\2\u0131X\3\2\2\2\u0132\u0133\7v\2\2\u0133\u0134\7t\2\2\u0134\u0135"+
		"\7w\2\2\u0135\u0136\7g\2\2\u0136Z\3\2\2\2\u0137\u0138\7h\2\2\u0138\u0139"+
		"\7c\2\2\u0139\u013a\7n\2\2\u013a\u013b\7u\2\2\u013b\u013c\7g\2\2\u013c"+
		"\\\3\2\2\2\u013d\u0146\7\62\2\2\u013e\u0142\4\63;\2\u013f\u0141\4\62;"+
		"\2\u0140\u013f\3\2\2\2\u0141\u0144\3\2\2\2\u0142\u0140\3\2\2\2\u0142\u0143"+
		"\3\2\2\2\u0143\u0146\3\2\2\2\u0144\u0142\3\2\2\2\u0145\u013d\3\2\2\2\u0145"+
		"\u013e\3\2\2\2\u0146^\3\2\2\2\u0147\u0148\7\62\2\2\u0148\u0152\t\4\2\2"+
		"\u0149\u014d\4\63;\2\u014a\u014c\4\62;\2\u014b\u014a\3\2\2\2\u014c\u014f"+
		"\3\2\2\2\u014d\u014b\3\2\2\2\u014d\u014e\3\2\2\2\u014e\u0150\3\2\2\2\u014f"+
		"\u014d\3\2\2\2\u0150\u0152\t\4\2\2\u0151\u0147\3\2\2\2\u0151\u0149\3\2"+
		"\2\2\u0152`\3\2\2\2\u0153\u0157\t\5\2\2\u0154\u0156\t\6\2\2\u0155\u0154"+
		"\3\2\2\2\u0156\u0159\3\2\2\2\u0157\u0155\3\2\2\2\u0157\u0158\3\2\2\2\u0158"+
		"b\3\2\2\2\u0159\u0157\3\2\2\2\f\2fp}\u008c\u0142\u0145\u014d\u0151\u0157"+
		"\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}