// Generated from javagrammar.g4 by ANTLR 4.2

    package mjc;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class javagrammarLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, WS=2, COMMENT=3, CLASS=4, PUBLIC=5, STATIC=6, VOID=7, IF=8, ELSE=9, 
		WHILE=10, NEW=11, RETURN=12, THIS=13, SYSO=14, LENGTH=15, BOOLEAN=16, 
		INT=17, STRING=18, LONG=19, LEFTBRACKET=20, RIGHTBRACKET=21, LEFTPAREN=22, 
		RIGHTPAREN=23, LEFTBRACE=24, RIGHTBRACE=25, DOT=26, COMMA=27, COLON=28, 
		SEMICOLON=29, PLUS=30, MINUS=31, MULT=32, ASSIGNMENT=33, NOT=34, AND=35, 
		OR=36, LESSTHAN=37, MORETHAN=38, LEQ=39, MEQ=40, EQ=41, NEQ=42, TRUE=43, 
		FALSE=44, INT_LIT=45, LONG_LIT=46, ID=47;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'main'", "WS", "COMMENT", "'class'", "'public'", "'static'", "'void'", 
		"'if'", "'else'", "'while'", "'new'", "'return'", "'this'", "'System.out.println'", 
		"'length'", "'boolean'", "'int'", "'String'", "'long'", "'['", "']'", 
		"'('", "')'", "'{'", "'}'", "'.'", "','", "':'", "';'", "'+'", "'-'", 
		"'*'", "'='", "'!'", "'&&'", "'||'", "'<'", "'>'", "'<='", "'>='", "'=='", 
		"'!='", "'true'", "'false'", "INT_LIT", "LONG_LIT", "ID"
	};
	public static final String[] ruleNames = {
		"T__0", "WS", "COMMENT", "CLASS", "PUBLIC", "STATIC", "VOID", "IF", "ELSE", 
		"WHILE", "NEW", "RETURN", "THIS", "SYSO", "LENGTH", "BOOLEAN", "INT", 
		"STRING", "LONG", "LEFTBRACKET", "RIGHTBRACKET", "LEFTPAREN", "RIGHTPAREN", 
		"LEFTBRACE", "RIGHTBRACE", "DOT", "COMMA", "COLON", "SEMICOLON", "PLUS", 
		"MINUS", "MULT", "ASSIGNMENT", "NOT", "AND", "OR", "LESSTHAN", "MORETHAN", 
		"LEQ", "MEQ", "EQ", "NEQ", "TRUE", "FALSE", "INT_LIT", "LONG_LIT", "ID"
	};


	public javagrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "javagrammar.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\61\u0140\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\3\2\3\2\3\2\3\2\3\2\3\3\6\3h\n\3\r"+
		"\3\16\3i\3\3\3\3\3\4\3\4\3\4\3\4\7\4r\n\4\f\4\16\4u\13\4\3\4\3\4\3\4\3"+
		"\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7"+
		"\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3"+
		"\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3"+
		"\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3"+
		"\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3"+
		"\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3"+
		"\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3"+
		"\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3"+
		"$\3$\3%\3%\3%\3&\3&\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,"+
		"\3,\3,\3,\3-\3-\3-\3-\3-\3-\3.\3.\3.\7.\u0127\n.\f.\16.\u012a\13.\5.\u012c"+
		"\n.\3/\3/\3/\3/\7/\u0132\n/\f/\16/\u0135\13/\3/\5/\u0138\n/\3\60\3\60"+
		"\7\60\u013c\n\60\f\60\16\60\u013f\13\60\2\2\61\3\3\5\4\7\5\t\6\13\7\r"+
		"\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25"+
		")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O"+
		")Q*S+U,W-Y.[/]\60_\61\3\2\6\5\2\13\f\17\17\"\"\4\2NNnn\4\2C\\c|\6\2\62"+
		";C\\aac|\u0146\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3"+
		"\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2"+
		"\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3"+
		"\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2"+
		"\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\2"+
		"9\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3"+
		"\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2"+
		"\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2"+
		"_\3\2\2\2\3a\3\2\2\2\5g\3\2\2\2\7m\3\2\2\2\t{\3\2\2\2\13\u0081\3\2\2\2"+
		"\r\u0088\3\2\2\2\17\u008f\3\2\2\2\21\u0094\3\2\2\2\23\u0097\3\2\2\2\25"+
		"\u009c\3\2\2\2\27\u00a2\3\2\2\2\31\u00a6\3\2\2\2\33\u00ad\3\2\2\2\35\u00b2"+
		"\3\2\2\2\37\u00c5\3\2\2\2!\u00cc\3\2\2\2#\u00d4\3\2\2\2%\u00d8\3\2\2\2"+
		"\'\u00df\3\2\2\2)\u00e4\3\2\2\2+\u00e6\3\2\2\2-\u00e8\3\2\2\2/\u00ea\3"+
		"\2\2\2\61\u00ec\3\2\2\2\63\u00ee\3\2\2\2\65\u00f0\3\2\2\2\67\u00f2\3\2"+
		"\2\29\u00f4\3\2\2\2;\u00f6\3\2\2\2=\u00f8\3\2\2\2?\u00fa\3\2\2\2A\u00fc"+
		"\3\2\2\2C\u00fe\3\2\2\2E\u0100\3\2\2\2G\u0102\3\2\2\2I\u0105\3\2\2\2K"+
		"\u0108\3\2\2\2M\u010a\3\2\2\2O\u010c\3\2\2\2Q\u010f\3\2\2\2S\u0112\3\2"+
		"\2\2U\u0115\3\2\2\2W\u0118\3\2\2\2Y\u011d\3\2\2\2[\u012b\3\2\2\2]\u0137"+
		"\3\2\2\2_\u0139\3\2\2\2ab\7o\2\2bc\7c\2\2cd\7k\2\2de\7p\2\2e\4\3\2\2\2"+
		"fh\t\2\2\2gf\3\2\2\2hi\3\2\2\2ig\3\2\2\2ij\3\2\2\2jk\3\2\2\2kl\b\3\2\2"+
		"l\6\3\2\2\2mn\7\61\2\2no\7,\2\2os\3\2\2\2pr\13\2\2\2qp\3\2\2\2ru\3\2\2"+
		"\2sq\3\2\2\2st\3\2\2\2tv\3\2\2\2us\3\2\2\2vw\7,\2\2wx\7\61\2\2xy\3\2\2"+
		"\2yz\b\4\2\2z\b\3\2\2\2{|\7e\2\2|}\7n\2\2}~\7c\2\2~\177\7u\2\2\177\u0080"+
		"\7u\2\2\u0080\n\3\2\2\2\u0081\u0082\7r\2\2\u0082\u0083\7w\2\2\u0083\u0084"+
		"\7d\2\2\u0084\u0085\7n\2\2\u0085\u0086\7k\2\2\u0086\u0087\7e\2\2\u0087"+
		"\f\3\2\2\2\u0088\u0089\7u\2\2\u0089\u008a\7v\2\2\u008a\u008b\7c\2\2\u008b"+
		"\u008c\7v\2\2\u008c\u008d\7k\2\2\u008d\u008e\7e\2\2\u008e\16\3\2\2\2\u008f"+
		"\u0090\7x\2\2\u0090\u0091\7q\2\2\u0091\u0092\7k\2\2\u0092\u0093\7f\2\2"+
		"\u0093\20\3\2\2\2\u0094\u0095\7k\2\2\u0095\u0096\7h\2\2\u0096\22\3\2\2"+
		"\2\u0097\u0098\7g\2\2\u0098\u0099\7n\2\2\u0099\u009a\7u\2\2\u009a\u009b"+
		"\7g\2\2\u009b\24\3\2\2\2\u009c\u009d\7y\2\2\u009d\u009e\7j\2\2\u009e\u009f"+
		"\7k\2\2\u009f\u00a0\7n\2\2\u00a0\u00a1\7g\2\2\u00a1\26\3\2\2\2\u00a2\u00a3"+
		"\7p\2\2\u00a3\u00a4\7g\2\2\u00a4\u00a5\7y\2\2\u00a5\30\3\2\2\2\u00a6\u00a7"+
		"\7t\2\2\u00a7\u00a8\7g\2\2\u00a8\u00a9\7v\2\2\u00a9\u00aa\7w\2\2\u00aa"+
		"\u00ab\7t\2\2\u00ab\u00ac\7p\2\2\u00ac\32\3\2\2\2\u00ad\u00ae\7v\2\2\u00ae"+
		"\u00af\7j\2\2\u00af\u00b0\7k\2\2\u00b0\u00b1\7u\2\2\u00b1\34\3\2\2\2\u00b2"+
		"\u00b3\7U\2\2\u00b3\u00b4\7{\2\2\u00b4\u00b5\7u\2\2\u00b5\u00b6\7v\2\2"+
		"\u00b6\u00b7\7g\2\2\u00b7\u00b8\7o\2\2\u00b8\u00b9\7\60\2\2\u00b9\u00ba"+
		"\7q\2\2\u00ba\u00bb\7w\2\2\u00bb\u00bc\7v\2\2\u00bc\u00bd\7\60\2\2\u00bd"+
		"\u00be\7r\2\2\u00be\u00bf\7t\2\2\u00bf\u00c0\7k\2\2\u00c0\u00c1\7p\2\2"+
		"\u00c1\u00c2\7v\2\2\u00c2\u00c3\7n\2\2\u00c3\u00c4\7p\2\2\u00c4\36\3\2"+
		"\2\2\u00c5\u00c6\7n\2\2\u00c6\u00c7\7g\2\2\u00c7\u00c8\7p\2\2\u00c8\u00c9"+
		"\7i\2\2\u00c9\u00ca\7v\2\2\u00ca\u00cb\7j\2\2\u00cb \3\2\2\2\u00cc\u00cd"+
		"\7d\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf\7q\2\2\u00cf\u00d0\7n\2\2\u00d0"+
		"\u00d1\7g\2\2\u00d1\u00d2\7c\2\2\u00d2\u00d3\7p\2\2\u00d3\"\3\2\2\2\u00d4"+
		"\u00d5\7k\2\2\u00d5\u00d6\7p\2\2\u00d6\u00d7\7v\2\2\u00d7$\3\2\2\2\u00d8"+
		"\u00d9\7U\2\2\u00d9\u00da\7v\2\2\u00da\u00db\7t\2\2\u00db\u00dc\7k\2\2"+
		"\u00dc\u00dd\7p\2\2\u00dd\u00de\7i\2\2\u00de&\3\2\2\2\u00df\u00e0\7n\2"+
		"\2\u00e0\u00e1\7q\2\2\u00e1\u00e2\7p\2\2\u00e2\u00e3\7i\2\2\u00e3(\3\2"+
		"\2\2\u00e4\u00e5\7]\2\2\u00e5*\3\2\2\2\u00e6\u00e7\7_\2\2\u00e7,\3\2\2"+
		"\2\u00e8\u00e9\7*\2\2\u00e9.\3\2\2\2\u00ea\u00eb\7+\2\2\u00eb\60\3\2\2"+
		"\2\u00ec\u00ed\7}\2\2\u00ed\62\3\2\2\2\u00ee\u00ef\7\177\2\2\u00ef\64"+
		"\3\2\2\2\u00f0\u00f1\7\60\2\2\u00f1\66\3\2\2\2\u00f2\u00f3\7.\2\2\u00f3"+
		"8\3\2\2\2\u00f4\u00f5\7<\2\2\u00f5:\3\2\2\2\u00f6\u00f7\7=\2\2\u00f7<"+
		"\3\2\2\2\u00f8\u00f9\7-\2\2\u00f9>\3\2\2\2\u00fa\u00fb\7/\2\2\u00fb@\3"+
		"\2\2\2\u00fc\u00fd\7,\2\2\u00fdB\3\2\2\2\u00fe\u00ff\7?\2\2\u00ffD\3\2"+
		"\2\2\u0100\u0101\7#\2\2\u0101F\3\2\2\2\u0102\u0103\7(\2\2\u0103\u0104"+
		"\7(\2\2\u0104H\3\2\2\2\u0105\u0106\7~\2\2\u0106\u0107\7~\2\2\u0107J\3"+
		"\2\2\2\u0108\u0109\7>\2\2\u0109L\3\2\2\2\u010a\u010b\7@\2\2\u010bN\3\2"+
		"\2\2\u010c\u010d\7>\2\2\u010d\u010e\7?\2\2\u010eP\3\2\2\2\u010f\u0110"+
		"\7@\2\2\u0110\u0111\7?\2\2\u0111R\3\2\2\2\u0112\u0113\7?\2\2\u0113\u0114"+
		"\7?\2\2\u0114T\3\2\2\2\u0115\u0116\7#\2\2\u0116\u0117\7?\2\2\u0117V\3"+
		"\2\2\2\u0118\u0119\7v\2\2\u0119\u011a\7t\2\2\u011a\u011b\7w\2\2\u011b"+
		"\u011c\7g\2\2\u011cX\3\2\2\2\u011d\u011e\7h\2\2\u011e\u011f\7c\2\2\u011f"+
		"\u0120\7n\2\2\u0120\u0121\7u\2\2\u0121\u0122\7g\2\2\u0122Z\3\2\2\2\u0123"+
		"\u012c\7\62\2\2\u0124\u0128\4\63;\2\u0125\u0127\4\62;\2\u0126\u0125\3"+
		"\2\2\2\u0127\u012a\3\2\2\2\u0128\u0126\3\2\2\2\u0128\u0129\3\2\2\2\u0129"+
		"\u012c\3\2\2\2\u012a\u0128\3\2\2\2\u012b\u0123\3\2\2\2\u012b\u0124\3\2"+
		"\2\2\u012c\\\3\2\2\2\u012d\u012e\7\62\2\2\u012e\u0138\t\3\2\2\u012f\u0133"+
		"\4\63;\2\u0130\u0132\4\62;\2\u0131\u0130\3\2\2\2\u0132\u0135\3\2\2\2\u0133"+
		"\u0131\3\2\2\2\u0133\u0134\3\2\2\2\u0134\u0136\3\2\2\2\u0135\u0133\3\2"+
		"\2\2\u0136\u0138\t\3\2\2\u0137\u012d\3\2\2\2\u0137\u012f\3\2\2\2\u0138"+
		"^\3\2\2\2\u0139\u013d\t\4\2\2\u013a\u013c\t\5\2\2\u013b\u013a\3\2\2\2"+
		"\u013c\u013f\3\2\2\2\u013d\u013b\3\2\2\2\u013d\u013e\3\2\2\2\u013e`\3"+
		"\2\2\2\u013f\u013d\3\2\2\2\n\2is\u0128\u012b\u0133\u0137\u013d\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}