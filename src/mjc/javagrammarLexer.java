// Generated from javagrammar.g4 by ANTLR 4.2

    package mjc;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class javagrammarLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, WS=2, COMMENT1=3, COMMENT2=4, CLASS=5, PUBLIC=6, STATIC=7, VOID=8, 
		IF=9, ELSE=10, WHILE=11, NEW=12, RETURN=13, THIS=14, SYSO=15, LENGTH=16, 
		BOOLEAN=17, INT=18, STRING=19, LONG=20, LEFTBRACKET=21, RIGHTBRACKET=22, 
		LEFTPAREN=23, RIGHTPAREN=24, LEFTBRACE=25, RIGHTBRACE=26, DOT=27, COMMA=28, 
		COLON=29, SEMICOLON=30, PLUS=31, MINUS=32, MULT=33, ASSIGNMENT=34, NOT=35, 
		AND=36, OR=37, LESSTHAN=38, MORETHAN=39, LEQ=40, MEQ=41, EQ=42, NEQ=43, 
		TRUE=44, FALSE=45, INT_LIT=46, LONG_LIT=47, ID=48;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'main'", "WS", "COMMENT1", "COMMENT2", "'class'", "'public'", "'static'", 
		"'void'", "'if'", "'else'", "'while'", "'new'", "'return'", "'this'", 
		"'System.out.println'", "'length'", "'boolean'", "'int'", "'String'", 
		"'long'", "'['", "']'", "'('", "')'", "'{'", "'}'", "'.'", "','", "':'", 
		"';'", "'+'", "'-'", "'*'", "'='", "'!'", "'&&'", "'||'", "'<'", "'>'", 
		"'<='", "'>='", "'=='", "'!='", "'true'", "'false'", "INT_LIT", "LONG_LIT", 
		"ID"
	};
	public static final String[] ruleNames = {
		"T__0", "WS", "COMMENT1", "COMMENT2", "CLASS", "PUBLIC", "STATIC", "VOID", 
		"IF", "ELSE", "WHILE", "NEW", "RETURN", "THIS", "SYSO", "LENGTH", "BOOLEAN", 
		"INT", "STRING", "LONG", "LEFTBRACKET", "RIGHTBRACKET", "LEFTPAREN", "RIGHTPAREN", 
		"LEFTBRACE", "RIGHTBRACE", "DOT", "COMMA", "COLON", "SEMICOLON", "PLUS", 
		"MINUS", "MULT", "ASSIGNMENT", "NOT", "AND", "OR", "LESSTHAN", "MORETHAN", 
		"LEQ", "MEQ", "EQ", "NEQ", "TRUE", "FALSE", "INT_LIT", "LONG_LIT", "ID"
	};


	public javagrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "javagrammar.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\62\u014f\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\3\2\3\2\3\2\3\2\3\2\3\3"+
		"\6\3j\n\3\r\3\16\3k\3\3\3\3\3\4\3\4\3\4\3\4\7\4t\n\4\f\4\16\4w\13\4\3"+
		"\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\7\5\u0081\n\5\f\5\16\5\u0084\13\5\3\5\3"+
		"\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b"+
		"\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13"+
		"\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16"+
		"\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20"+
		"\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21"+
		"\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25"+
		"\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33"+
		"\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$"+
		"\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3(\3(\3)\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\3"+
		",\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3/\3/\3/\7/\u0136\n/\f/\16/\u0139\13"+
		"/\5/\u013b\n/\3\60\3\60\3\60\3\60\7\60\u0141\n\60\f\60\16\60\u0144\13"+
		"\60\3\60\5\60\u0147\n\60\3\61\3\61\7\61\u014b\n\61\f\61\16\61\u014e\13"+
		"\61\4u\u0082\2\62\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31"+
		"\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65"+
		"\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62\3\2\7"+
		"\5\2\13\f\17\17\"\"\3\2\f\f\4\2NNnn\4\2C\\c|\6\2\62;C\\aac|\u0156\2\3"+
		"\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2"+
		"\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31"+
		"\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2"+
		"\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2"+
		"\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2"+
		"\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2"+
		"I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3"+
		"\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2"+
		"\2\3c\3\2\2\2\5i\3\2\2\2\7o\3\2\2\2\t|\3\2\2\2\13\u008a\3\2\2\2\r\u0090"+
		"\3\2\2\2\17\u0097\3\2\2\2\21\u009e\3\2\2\2\23\u00a3\3\2\2\2\25\u00a6\3"+
		"\2\2\2\27\u00ab\3\2\2\2\31\u00b1\3\2\2\2\33\u00b5\3\2\2\2\35\u00bc\3\2"+
		"\2\2\37\u00c1\3\2\2\2!\u00d4\3\2\2\2#\u00db\3\2\2\2%\u00e3\3\2\2\2\'\u00e7"+
		"\3\2\2\2)\u00ee\3\2\2\2+\u00f3\3\2\2\2-\u00f5\3\2\2\2/\u00f7\3\2\2\2\61"+
		"\u00f9\3\2\2\2\63\u00fb\3\2\2\2\65\u00fd\3\2\2\2\67\u00ff\3\2\2\29\u0101"+
		"\3\2\2\2;\u0103\3\2\2\2=\u0105\3\2\2\2?\u0107\3\2\2\2A\u0109\3\2\2\2C"+
		"\u010b\3\2\2\2E\u010d\3\2\2\2G\u010f\3\2\2\2I\u0111\3\2\2\2K\u0114\3\2"+
		"\2\2M\u0117\3\2\2\2O\u0119\3\2\2\2Q\u011b\3\2\2\2S\u011e\3\2\2\2U\u0121"+
		"\3\2\2\2W\u0124\3\2\2\2Y\u0127\3\2\2\2[\u012c\3\2\2\2]\u013a\3\2\2\2_"+
		"\u0146\3\2\2\2a\u0148\3\2\2\2cd\7o\2\2de\7c\2\2ef\7k\2\2fg\7p\2\2g\4\3"+
		"\2\2\2hj\t\2\2\2ih\3\2\2\2jk\3\2\2\2ki\3\2\2\2kl\3\2\2\2lm\3\2\2\2mn\b"+
		"\3\2\2n\6\3\2\2\2op\7\61\2\2pq\7\61\2\2qu\3\2\2\2rt\13\2\2\2sr\3\2\2\2"+
		"tw\3\2\2\2uv\3\2\2\2us\3\2\2\2vx\3\2\2\2wu\3\2\2\2xy\t\3\2\2yz\3\2\2\2"+
		"z{\b\4\2\2{\b\3\2\2\2|}\7\61\2\2}~\7,\2\2~\u0082\3\2\2\2\177\u0081\13"+
		"\2\2\2\u0080\177\3\2\2\2\u0081\u0084\3\2\2\2\u0082\u0083\3\2\2\2\u0082"+
		"\u0080\3\2\2\2\u0083\u0085\3\2\2\2\u0084\u0082\3\2\2\2\u0085\u0086\7,"+
		"\2\2\u0086\u0087\7\61\2\2\u0087\u0088\3\2\2\2\u0088\u0089\b\5\2\2\u0089"+
		"\n\3\2\2\2\u008a\u008b\7e\2\2\u008b\u008c\7n\2\2\u008c\u008d\7c\2\2\u008d"+
		"\u008e\7u\2\2\u008e\u008f\7u\2\2\u008f\f\3\2\2\2\u0090\u0091\7r\2\2\u0091"+
		"\u0092\7w\2\2\u0092\u0093\7d\2\2\u0093\u0094\7n\2\2\u0094\u0095\7k\2\2"+
		"\u0095\u0096\7e\2\2\u0096\16\3\2\2\2\u0097\u0098\7u\2\2\u0098\u0099\7"+
		"v\2\2\u0099\u009a\7c\2\2\u009a\u009b\7v\2\2\u009b\u009c\7k\2\2\u009c\u009d"+
		"\7e\2\2\u009d\20\3\2\2\2\u009e\u009f\7x\2\2\u009f\u00a0\7q\2\2\u00a0\u00a1"+
		"\7k\2\2\u00a1\u00a2\7f\2\2\u00a2\22\3\2\2\2\u00a3\u00a4\7k\2\2\u00a4\u00a5"+
		"\7h\2\2\u00a5\24\3\2\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7n\2\2\u00a8\u00a9"+
		"\7u\2\2\u00a9\u00aa\7g\2\2\u00aa\26\3\2\2\2\u00ab\u00ac\7y\2\2\u00ac\u00ad"+
		"\7j\2\2\u00ad\u00ae\7k\2\2\u00ae\u00af\7n\2\2\u00af\u00b0\7g\2\2\u00b0"+
		"\30\3\2\2\2\u00b1\u00b2\7p\2\2\u00b2\u00b3\7g\2\2\u00b3\u00b4\7y\2\2\u00b4"+
		"\32\3\2\2\2\u00b5\u00b6\7t\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8\7v\2\2\u00b8"+
		"\u00b9\7w\2\2\u00b9\u00ba\7t\2\2\u00ba\u00bb\7p\2\2\u00bb\34\3\2\2\2\u00bc"+
		"\u00bd\7v\2\2\u00bd\u00be\7j\2\2\u00be\u00bf\7k\2\2\u00bf\u00c0\7u\2\2"+
		"\u00c0\36\3\2\2\2\u00c1\u00c2\7U\2\2\u00c2\u00c3\7{\2\2\u00c3\u00c4\7"+
		"u\2\2\u00c4\u00c5\7v\2\2\u00c5\u00c6\7g\2\2\u00c6\u00c7\7o\2\2\u00c7\u00c8"+
		"\7\60\2\2\u00c8\u00c9\7q\2\2\u00c9\u00ca\7w\2\2\u00ca\u00cb\7v\2\2\u00cb"+
		"\u00cc\7\60\2\2\u00cc\u00cd\7r\2\2\u00cd\u00ce\7t\2\2\u00ce\u00cf\7k\2"+
		"\2\u00cf\u00d0\7p\2\2\u00d0\u00d1\7v\2\2\u00d1\u00d2\7n\2\2\u00d2\u00d3"+
		"\7p\2\2\u00d3 \3\2\2\2\u00d4\u00d5\7n\2\2\u00d5\u00d6\7g\2\2\u00d6\u00d7"+
		"\7p\2\2\u00d7\u00d8\7i\2\2\u00d8\u00d9\7v\2\2\u00d9\u00da\7j\2\2\u00da"+
		"\"\3\2\2\2\u00db\u00dc\7d\2\2\u00dc\u00dd\7q\2\2\u00dd\u00de\7q\2\2\u00de"+
		"\u00df\7n\2\2\u00df\u00e0\7g\2\2\u00e0\u00e1\7c\2\2\u00e1\u00e2\7p\2\2"+
		"\u00e2$\3\2\2\2\u00e3\u00e4\7k\2\2\u00e4\u00e5\7p\2\2\u00e5\u00e6\7v\2"+
		"\2\u00e6&\3\2\2\2\u00e7\u00e8\7U\2\2\u00e8\u00e9\7v\2\2\u00e9\u00ea\7"+
		"t\2\2\u00ea\u00eb\7k\2\2\u00eb\u00ec\7p\2\2\u00ec\u00ed\7i\2\2\u00ed("+
		"\3\2\2\2\u00ee\u00ef\7n\2\2\u00ef\u00f0\7q\2\2\u00f0\u00f1\7p\2\2\u00f1"+
		"\u00f2\7i\2\2\u00f2*\3\2\2\2\u00f3\u00f4\7]\2\2\u00f4,\3\2\2\2\u00f5\u00f6"+
		"\7_\2\2\u00f6.\3\2\2\2\u00f7\u00f8\7*\2\2\u00f8\60\3\2\2\2\u00f9\u00fa"+
		"\7+\2\2\u00fa\62\3\2\2\2\u00fb\u00fc\7}\2\2\u00fc\64\3\2\2\2\u00fd\u00fe"+
		"\7\177\2\2\u00fe\66\3\2\2\2\u00ff\u0100\7\60\2\2\u01008\3\2\2\2\u0101"+
		"\u0102\7.\2\2\u0102:\3\2\2\2\u0103\u0104\7<\2\2\u0104<\3\2\2\2\u0105\u0106"+
		"\7=\2\2\u0106>\3\2\2\2\u0107\u0108\7-\2\2\u0108@\3\2\2\2\u0109\u010a\7"+
		"/\2\2\u010aB\3\2\2\2\u010b\u010c\7,\2\2\u010cD\3\2\2\2\u010d\u010e\7?"+
		"\2\2\u010eF\3\2\2\2\u010f\u0110\7#\2\2\u0110H\3\2\2\2\u0111\u0112\7(\2"+
		"\2\u0112\u0113\7(\2\2\u0113J\3\2\2\2\u0114\u0115\7~\2\2\u0115\u0116\7"+
		"~\2\2\u0116L\3\2\2\2\u0117\u0118\7>\2\2\u0118N\3\2\2\2\u0119\u011a\7@"+
		"\2\2\u011aP\3\2\2\2\u011b\u011c\7>\2\2\u011c\u011d\7?\2\2\u011dR\3\2\2"+
		"\2\u011e\u011f\7@\2\2\u011f\u0120\7?\2\2\u0120T\3\2\2\2\u0121\u0122\7"+
		"?\2\2\u0122\u0123\7?\2\2\u0123V\3\2\2\2\u0124\u0125\7#\2\2\u0125\u0126"+
		"\7?\2\2\u0126X\3\2\2\2\u0127\u0128\7v\2\2\u0128\u0129\7t\2\2\u0129\u012a"+
		"\7w\2\2\u012a\u012b\7g\2\2\u012bZ\3\2\2\2\u012c\u012d\7h\2\2\u012d\u012e"+
		"\7c\2\2\u012e\u012f\7n\2\2\u012f\u0130\7u\2\2\u0130\u0131\7g\2\2\u0131"+
		"\\\3\2\2\2\u0132\u013b\7\62\2\2\u0133\u0137\4\63;\2\u0134\u0136\4\62;"+
		"\2\u0135\u0134\3\2\2\2\u0136\u0139\3\2\2\2\u0137\u0135\3\2\2\2\u0137\u0138"+
		"\3\2\2\2\u0138\u013b\3\2\2\2\u0139\u0137\3\2\2\2\u013a\u0132\3\2\2\2\u013a"+
		"\u0133\3\2\2\2\u013b^\3\2\2\2\u013c\u013d\7\62\2\2\u013d\u0147\t\4\2\2"+
		"\u013e\u0142\4\63;\2\u013f\u0141\4\62;\2\u0140\u013f\3\2\2\2\u0141\u0144"+
		"\3\2\2\2\u0142\u0140\3\2\2\2\u0142\u0143\3\2\2\2\u0143\u0145\3\2\2\2\u0144"+
		"\u0142\3\2\2\2\u0145\u0147\t\4\2\2\u0146\u013c\3\2\2\2\u0146\u013e\3\2"+
		"\2\2\u0147`\3\2\2\2\u0148\u014c\t\5\2\2\u0149\u014b\t\6\2\2\u014a\u0149"+
		"\3\2\2\2\u014b\u014e\3\2\2\2\u014c\u014a\3\2\2\2\u014c\u014d\3\2\2\2\u014d"+
		"b\3\2\2\2\u014e\u014c\3\2\2\2\13\2ku\u0082\u0137\u013a\u0142\u0146\u014c"+
		"\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}